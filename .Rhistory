# Function to load tweets
from pymongo import MongoClient
import pandas as pd
def load_from_mongo(n):
client = MongoClient('mongodb://3.22.27.22:27017')
db = client.final_proj
covid_cur = db.covid_res.find({})
tweets_cur = db.tweets.find({}).limit(int(n))
d = []
#body, hashtags, time/date, retweet count, user, geocoordinates
for line in tweets_cur:
dict = {}
dict['id'] = line['id']
dict['timestamp'] = line['created_at']
dict['text'] = line['text']
dict['hashtags'] = line['entities']['hashtags']
dict['coordinates'] = line['coordinates']
dict['author_location'] = line['user']['location']
dict['author'] = line['user']['screen_name']
dict['author_id'] = line['user']['id']
d.append(dict)
tweets_df = pd.DataFrame(d)
client.close()
return tweets_df
covidMentalHealth::run_app()
reticulate::repl_python()
reticulate::py_config()
?reticulate::use_python
library(covidMentalHealth)
run_app()
## Docker ----
## If you want to deploy via a generic Dockerfile
golem::add_dockerfile()
reticulate::repl_python()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
install.packages("data.tabke")
install.packages("data.table")
install.packages("data.table")
usethis::use_package( "data.table" , min_version = T)
## Docker ----
## If you want to deploy via a generic Dockerfile
golem::add_dockerfile()
?golem::add_dockerfile
?onLoad
??onLoad
golem::add_fct( "install_py_dependencies" )
reticulate::repl_python()
